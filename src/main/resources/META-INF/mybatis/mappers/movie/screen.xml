<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.es.movie.mapper.ScreenMapper">
	<!-- 단순 SeatId로 Seat조회 -->
	<select id="getSeatBySeatId" parameterType="int" resultType="Seat">
		select
			id
			,status
			,detail
			,name
		from seats
		where id = #{value}
	</select>
	
	<!-- screenId로 모든 Seat 조회 -->
	<select id="getSeatsByScreenId" parameterType="int" resultType="Seat">
		select
			A.id				"screen.id"
			,A.seats_count		"screen.seatsCount"
			,A.NAME				"screen.name"
			,B.id				id
			,B.status			status
			,B.detail			detail
			,B.name				name
		from screens A, seats B
		where A.id = B.screen_id
		and A.id = #{value}
		order by B.id
	</select>
	<!-- 시간표조회 예약석 뽑기  -->
	<select id="getReservedSeatsByTimetableId" parameterType="int" resultType="Ticket">
		select
			C.id				"movieTimetable.id"
			,C.started_at		"movieTimetable.statedAt"
			,C.ended_at			"movieTimetable.endedAt"
			,C.ordered			"movieTimetable.ordered"
			,D.id				id
			,D.seat_id			"seat.id"
			,E.name				"seat.name"
		from movie_timetable C, tickets D, seats E
		where C.id = D.movie_timetable_id
		and E.id = D.seat_id
		and C.id = #{value}
	</select>
	
	
	<select id="getSeatInfoBySeatId" parameterType="SeatInfo" resultType="SeatInfo">
		SELECT 
			A.NAME			seatname,
			C.RID			rid,
			D.username		username,
			D.NAME			name,
			C.PURCHASE_TYPE	purchaseType,
			C.PURCHASE_DATE purchaseDate,
			E.STARTED_AT 	startedAt
		from 
			seats A, TICKETS B, TICKET_RECEIPTS C, CUSTOMERS D ,MOVIE_TIMETABLE E
		where  
			A.ID=B.SEAT_ID
		and
			B.TICKET_RECEIPT_ID = C.ID
		AND
			C.CUSTOMER_ID = D.ID
		and
			B.MOVIE_TIMETABLE_ID= E.id
		and E.started_at >= to_date(to_char(#{startedAt}, 'yyyy-mm-dd') || '06:00', 'yyyy-mm-dd hh24:mi')
		and E.started_at &lt;= to_date(to_char(#{startedAt} + 1, 'yyyy-mm-dd') || '05:00', 'yyyy-mm-dd hh24:mi')
		and A.id = #{id}
	</select>
	
	
	
	
	<!-- 좌석확보 추가 -->
	<insert id="insertSeatDissabled" parameterType="SeatDisabled">
		insert into seat_disabled
		(id, seat_id, detail)
		values
		(seq_seat_disabled.nextval, #{seat.id}, #{detail})		
	</insert>
	
	<!-- 좌석확보시 시트상태 변경 -->
	<update id="updateSeatStatus" parameterType="Seat">
		update 
			seats 
		set
			status = #{status}
		where
	 		 id = #{id}
	</update>
	
	<!-- 좌석확보수정시 확보사유조회 -->
	<select id="getDisabledDetail" parameterType="int" resultType="SeatDisabled">
		SELECT 
			A.id		id,
			A.detail  detail,
			B.id	"seat.id"
		FROM SEAT_DISABLED A , SEATS B
		where A.SEAT_ID = B.ID
		and A.seat_id = #{value}
	</select>
</mapper>





















