<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.es.management.mapper.CustomerMapper">
	<select id="getAllCustomers" resultType="Customer">
		select
			id						id,
			username				username,
			password				password,
			name					name,
			phone					phone,
			email					email,
			gender					gender,
			miliege					miliege,
			image_uri				imageUri,
			deleted					deleted,
			third_party				thirdParty,
			created_at				createdAt,
			updated_at				updatedAt,
			customer_rank_id		"customerRank.type",
			customer_type_id		"customerTypes.type",
			birth					birth
		from
			customers	
	</select>
	
	<select id="getDetailCustomer" resultType="Customer" parameterType="int">
		select
			id						id,
			username				username,
			password				password,
			name					name,
			phone					phone,
			email					email,
			gender					gender,
			miliege					miliege,
			image_uri				imageUri,
			deleted					deleted,
			third_party				thirdParty,
			created_at				createdAt,
			updated_at				updatedAt,
			customer_rank_id		"customerRank.type",
			customer_type_id		"customerTypes.type",
			birth					birth
		from
			customers
		where
			id = #{value}		
	</select>
	
	<select id="searchByCustomers" parameterType="Criteria" resultType="Customer">
		select
			id						id,
			username				username,
			password				password,
			name					name,
			phone					phone,
			email					email,
			gender					gender,
			miliege					miliege,
			image_uri				imageUri,
			deleted					deleted,
			third_party				thirdParty,
			created_at				createdAt,
			updated_at				updatedAt,
			customer_rank_id		"customerRank.type",
			customer_type_id		"customerTypes.type",
			birth					birth
		from
			customers
		<where>
			<if test="keyword != null or keyword != ''">
				<choose>
					<when test="opt == 'id'">
						and id like '%' || #{keyword} || '%'
					</when>
					<when test="opt == 'name'">
						and name like '%' || #{keyword} || '%'
					</when>
					<when test="opt == 'birth'">
						and birth like '%' || #{keyword} || '%'
					</when>
					<when test="opt == 'phone'">
						and phone like '%' || #{keyword} || '%'
					</when>
					<when test="opt == 'email'">
						and email like '%' || #{keyword} || '%'
					</when>
				</choose>
			</if>
		</where>	
	</select>
	
	<select id="getCardSelect" parameterType="string" resultType="TicketReceipt">
		select
    		A.id					id,
    		A.rid					rid,
    		A.price					price,
    		A.purchase_type			purchaseType,
    		A.discounted_price		discountedPrice,
    		A.pos_id				pos,
    		A.customer_id			"customer.id",
    		A.deleted				deleted,
    		A.purchase_date			purchaseDate,
    		A.credit_no				creditNo,
			B.username				"customer.username",
			B.password				"customer.password",
			B.name					"customer.name",
			B.phone					"customer.phone",
			B.email					"customer.email",
			B.gender				"customer.gender",
			B.miliege				"customer.miliege",
			B.image_uri				"customer.imageUri",
			B.deleted				"customer.deleted",
			B.third_party			"customer.thirdParty",
			B.created_at			"customer.createdAt",
			B.updated_at			"customer.updatedAt",
			B.customer_rank_id		"customer.customerRank.type",
			B.customer_type_id		"customer.customerTypes.type",
			B.birth					"customer.birth"
    		
		from
		    TICKET_RECEIPTS A, CUSTOMERS B
		where
		    A.CUSTOMER_ID = B.ID
		and 
			A.CREDIT_NO like '%' || #{value} || '%'
	</select>
	
	<select id="getCardDetailSelect" parameterType="int" resultType="TicketReceipt">
		select
    		A.id					id,
    		A.rid					rid,
    		A.price					price,
    		A.purchase_type			purchaseType,
    		A.discounted_price		discountedPrice,
    		A.pos_id				pos,
    		A.customer_id			"customer.id",
    		A.deleted				deleted,
    		A.purchase_date			purchaseDate,
    		A.credit_no				creditNo,
			B.username				"customer.username",
			B.password				"customer.password",
			B.name					"customer.name",
			B.phone					"customer.phone",
			B.email					"customer.email",
			B.gender				"customer.gender",
			B.miliege				"customer.miliege",
			B.image_uri				"customer.imageUri",
			B.deleted				"customer.deleted",
			B.third_party			"customer.thirdParty",
			B.created_at			"customer.createdAt",
			B.updated_at			"customer.updatedAt",
			B.customer_rank_id		"customer.customerRank.type",
			B.customer_type_id		"customer.customerTypes.type",
			B.birth					"customer.birth"
    		
		from
		    TICKET_RECEIPTS A, CUSTOMERS B
		where
		    A.CUSTOMER_ID = B.ID
		and 
			A.customer_id = #{value}
	</select>

</mapper>